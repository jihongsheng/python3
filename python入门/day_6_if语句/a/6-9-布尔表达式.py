# -*- coding: UTF-8 -*-

"""
随着你对编程的了解越来越深入，将遇到术语布尔表达式 ，它不过是条件测试的别名。与条件表达式一样，
布尔表达式的结果要么为True ，要么为False 。布尔值通常用于记录条件，如游戏是否正在运行，或用户
是否可以编辑网站的特定内容：

game_active = True
can_edit = False
在跟踪程序状态或程序中重要的条件方面，布尔值提供了一种高效的方式。
"""

# 5-1 条件测试 ：编写一系列条件测试；将每个测试以及你对其结果的预测和实际结果都打印出来。你编写的代
# 码应类似于下面这样：
car = 'subaru'
print("Is car == 'subaru'? I predict True.")
print(car == 'subaru')
print("\nIs car == 'audi'? I predict False.")
print(car == 'audi')
# 详细研究实际结果，直到你明白了它为何为True 或False 。
# 创建至少10个测试，且其中结果分别为True 和False 的测试都至少有5个。

# 5-2 更多的条件测试 ：你并非只能创建10个测试。如果你想尝试做更多的比较，可再编写一些测试，并将它们
# 加入到conditional_tests.py中。对于下面列出的各种测试，至少编写一个结果为True 和False 的测试。
# 检查两个字符串相等和不等。
# 使用函数lower() 的测试。
# 检查两个数字相等、不等、大于、小于、大于等于和小于等于。
# 使用关键字and 和or 的测试。
# 测试特定的值是否包含在列表中。
# 测试特定的值是否未包含在列表中。