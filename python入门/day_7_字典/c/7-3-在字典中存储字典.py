# -*- coding: UTF-8 -*-

# 可在字典中嵌套字典，但这样做时，代码可能很快复杂起来。例如，如果有多个网站用户，每个都
# 有独特的用户名，可在字典中将用户名作为键，然后将每位用户的信息存储在一个字典中，并将该
# 字典作为与用户名相关联的值。在下面的程序中，对于每位用户，我们都存储了其三项信息：名、
# 姓和居住地；为访问这些信息，我们遍历所有的用户名，并访问与每个用户名相关联的信息字典：

# 首先我定义一个字典名字为like_name,其中包含两个键：用户名张三和李四：每个键相关联的值都
# 是一个字典，其中包含籍贯、爱好、年龄
like_name = {
    '张三': {'籍贯': '北京', '爱好': '跳舞', '年龄': 18,},
    '李四': {'籍贯': '天津', '爱好': '唱歌', '年龄': 30,},
}
# 变量字典like_name,让python依次将每个键存储在变量key中，并以次将每个键相关的值存储在value中
for key, value in like_name.items():
    # 在主循环内部，我们将用户名打印出来
    print("\n姓名:%s " % key)

    # 我们开始访问内部字典，变量value包含用户信息字典，而该字典包含3个键：籍贯、爱好、年龄
    native_place = value['籍贯']
    hobby = value['爱好']
    age = value['年龄']

    # 对于每位用户，我们用这些键生成整洁度籍贯、爱好、年龄，然后打印有关用户简要信息
    print("\t籍贯: %s" % native_place)
    print("\t爱好: %s" % hobby)
    print("\t年龄: %s" % age)

