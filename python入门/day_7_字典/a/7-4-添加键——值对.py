# -*- coding: UTF-8 -*-
# 字典是一种动态结构，可随时在其中添加键—值对。要添加键—值对，可依次指定字典名、
# 用方括号括起的键和相关联的值。
# 下面在字典alien_0 中添加两项信息：外星人的 x 坐标和 y 坐标，让我们能够在屏幕的特
# 定位置显示该外星人。我们将这个外星人放在屏幕左边缘，且离屏幕上边缘25像素的地方。
# 由于屏幕坐标系的原点通常为左上角，因此要将该外星人放在屏幕左边缘，可将 x 坐标设
# 置为0；要将该外星人放在离屏幕顶部25像素的地方，可将 y 坐标设置为25，如下所示：

alien_0 = {'color': 'green', 'points': 5}
print(alien_0)
alien_0['x_position'] = 0   # ❶
alien_0['y_position'] = 25  # ❷
print(alien_0)

# 我们首先定义了前面一直在使用的字典，然后打印这个字典，以显示其信息快照。在❶处，
# 我们在这个字典中新增了一个键—值对，其中的键为'x_position' ，而值为0 。在
# ❷处，我们重复这样的操作，但使用的键为'y_position' 。打印修改后的字典时，将看到这
# 两个新增的键—值对：

# 个字典的最终版本包含四个键—值对，其中原来的两个指定外星人的颜色和点数，而新增的两个指定位置。注意，键—值对的排列顺序与添加顺序不同。Python不关心键—值对
# 的添加顺序，而只关心键和值之间的关联关系



